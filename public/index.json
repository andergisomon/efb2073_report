[{"content":"Team members We are second year third semester Electrical and Electronics Engineering students in Universiti Teknologi PETRONAS. Currently undergoing Microprocessors \u0026amp; Computer Architecture (EFB2073).\nVolintine Ander Zechariah Hwong Eddry Haqimy Aziz Abdul Bagas Kensley Kudang Kennedy 21001524 21001586 21001460 21000360 21001068 Task allocation Software Implementatiion:\nVolintine Ander: ESP-NOW research \u0026amp; data logger coding Zechariah Hwong: Transmitter coding Eddry Haqimy: Receiver coding Web-based Report:\nAziz Abdul Bagas Kensley Kudang Kennedy Other info Worship Uni. He cute. Hi\n","permalink":"http://localhost:1313/posts/about_us/","summary":"More information on each team member","title":"About the Team"},{"content":"Project Background Thinking on development and implementation of a real world-based project together with complexity of a system, we decided that we should definitely make an IoT project. But an issue with the IoT based project is the low privacy, due to the need of a server and internet. Hardly discussing this matter, our team ended up concluding that we can solve this problem. There comes the main feature of our project, where we DO NOT need access to internet, NOR a server. Our projectâ€™s main feature is the use of ESP-NOW, which is a wireless communication protocol developed by Espressif that features short packet transmission. This protocol enables multiple devices to talk to each other using Wi-Fi with ESP-NOW protocol. This is a fast communication protocol that can be used to exchange small messages (up to 250 bytes) between ESP32 boards. ESP-NOW is very versatile and can have one-way or two-way communication in different arrangements.\nIn many industrial, commercial, and residential applications, traditional wired switches are still widely used for controlling various systems and devices, mostly turn ON or OFF a certain system or device. With our wireless system switches, one is now able to update the system to a wireless switch system, then being able to perform the same operations as the wired system, but now wireless.\nProblem Statement Wired systems are less adaptable to changing requirements and can be inconvenient for users who need to control devices from different locations, this issue highlights the need for a universal wireless system that can be integrated as an update to a wired system already existing.\nObjectives To update currently wired switches by wireless switches To enable users to control their devices from multiple location through wireless transmission To use local transmission for private IoT applications/environment ","permalink":"http://localhost:1313/posts/intro/","summary":"Project Background, Problem Statement, Objectives","title":"Introduction"},{"content":"Hardware selection Hardware design ","permalink":"http://localhost:1313/posts/hardware/","summary":"Hardware selection, Harware design","title":"Hardware Development Process"},{"content":"Discussion Technical challenges faced Overcoming the challenges ","permalink":"http://localhost:1313/posts/development_process/","summary":"Further discussion, technical challenges, and how we had overcome them","title":"Software development process"},{"content":"End product There are no words that best describe our promising project, so let us demonstrate our end product in action in the following video:\n(Youtube video here)\nApplications Our Multipurpose IoT Automation with RISC-V project can be implemented in endless scenarios, here are some examples:\nPublic Transport - Sexual harassment alarm, vehicle access, etc. Home Automation - Light control, security systems, etc. Industrial Application - Machine control, process monitoring, etc. Health Care - Patient room control, emergency systems, etc. Agriculture - Irrigation control, greenhouse automation, etc. Conclusion Recommenadations ","permalink":"http://localhost:1313/posts/results/","summary":"See our end product in action, conclusion, and future recommendations","title":"Project Outomes \u0026 Accomplishments"},{"content":" Some C code for your viewing pleasure. {.note}\n1 2 3 4 5 6 7 8 9 #include \u0026#34;freertos.h\u0026#34; #include \u0026lt;drivers/gpio.h\u0026gt; // I\u0026#39;m a comment. Everyone ignores me. I\u0026#39;m lonely. That makes me sad. extern void init_gpio(); void app_main() { init_gpio(); } ","permalink":"http://localhost:1313/posts/source_code/","summary":"View our code in detail","title":"Source code"}]
[{"content":"Team members We are second year third semester Electrical and Electronics Engineering students in Universiti Teknologi PETRONAS. Currently undergoing Microprocessors \u0026amp; Computer Architecture (EFB2073).\nVolintine Ander Zechariah Hwong Eddry Haqimy Aziz Abdul Bagas Kensley Kudang Kennedy 21001524 21001586 21001460 21000360 21001068 Task allocation Software Implementatiion:\nVolintine Ander: ESP-NOW research \u0026amp; data logger coding Zechariah Hwong: Transmitter coding Eddry Haqimy: Receiver coding Web-based Report:\nAziz Abdul Bagas Kensley Kudang Kennedy Other info ","permalink":"http://localhost:1313/posts/about_us/","summary":"More information on each team member","title":"About the Team"},{"content":"Project Background Our project makes use of ESP-NOW, a wireless communication protocol developed by Espressif for short packet transmission. This versatile protocol enables multiple devices to talk to each other via Wi-Fi with ESP-NOW protocol.\nIn many industrial, commercial, and residential applications, traditional wired communications are still widely used for controlling various systems and devices, mostly to turn ON/OFF certain devices. Our system replaces clunky wires in exchange for modular wireless switches.\nProblem Statement Wired systems quickly become inconvenient when many devices need to be controlled. This scalability issue can be solved using a wireless control system, which we implemented using ESP NOW.\nObjectives To update currently wired switches by wireless switches To enable users to control their devices from multiple location through wireless transmission To use local transmission for private IoT applications/environment Tech stack A brief description of the technologies we used throughout the project. NO PART of the Arduino framework was used.\nHardware: Seeed XIAO ESP32C3 boards (x2) STM32 board (x1) LEDs Switches Light Dependent Resistor Software frameworks: For embedded programming:\nESP IoT Development Framework (ESP IDF) ARM mBED Powershell Visual Studio Code + ESP IDF extension IDF Frontend For web report:\nHugo GitHub Pages Programming languages:\nC JavaScript (website report) ","permalink":"http://localhost:1313/posts/intro/","summary":"Project Background, Problem Statement, Objectives","title":"Introduction"},{"content":"Hardware selection Hardware design ","permalink":"http://localhost:1313/posts/hardware/","summary":"Hardware selection, Harware design","title":"Hardware Development Process"},{"content":"Discussion Technical challenges faced Overcoming the challenges ","permalink":"http://localhost:1313/posts/development_process/","summary":"Further discussion, technical challenges, and how we had overcome them","title":"Software development process"},{"content":"End product There are no words that best describe our promising project, so let us demonstrate our end product in action in the following video:\n(Youtube video here)\nApplications Our Multipurpose IoT Automation with RISC-V project can be implemented in endless scenarios, here are some examples:\nPublic Transport - Sexual harassment alarm, vehicle access, etc. Home Automation - Light control, security systems, etc. Industrial Application - Machine control, process monitoring, etc. Health Care - Patient room control, emergency systems, etc. Agriculture - Irrigation control, greenhouse automation, etc. Conclusion Our module is a proof-of-concept implementation of cloudless IoT technology. This paves the road towards Intranet of Things as opposed to Internet of Things. Our system operates independently of third-party vendors (such as AWS, Azure, Clouflare, etc.), ensuring complete vendor independence. The benefits of this approach make it an attractive option for organizations looking for secure IoT solutions, unlike the mainstream approach.\nThe primary advantage of our approach is full data sovereignty, allowing users to maintain full control over information and access.\nOur module is fully air-gapped, as no data is exchanged with external servers. This decreases the attack surface for malicious parties to exploit.\nBusinesses can achieve a higher degree of security and privacy while retaining complete ownership of their data.\nRecommendations ","permalink":"http://localhost:1313/posts/results/","summary":"See our end product in action, conclusion, and future recommendations","title":"Project Outomes \u0026 Accomplishments"},{"content":" Some C code for your viewing pleasure. {.note}\n1 2 3 4 5 6 7 8 9 #include \u0026#34;freertos.h\u0026#34; #include \u0026lt;drivers/gpio.h\u0026gt; // I\u0026#39;m a comment. Everyone ignores me. I\u0026#39;m lonely. That makes me sad. extern void init_gpio(); void app_main() { init_gpio(); } ","permalink":"http://localhost:1313/posts/source_code/","summary":"View our code in detail","title":"Source code"}]